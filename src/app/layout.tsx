import './globals.css';
import 'swiper/css';
import 'swiper/css/zoom';
import 'swiper/css/navigation';
import 'swiper/css/pagination';
import 'react-datepicker/dist/react-datepicker.css';
import SessionProviderContext from '@/contexts/SessionProviderContext';
import { Poppins } from 'next/font/google';
import { BasicDialogsContextProvider } from '@/contexts/BasicDialogsContext';
import { ToastContextProvider } from '@/contexts/ToastContext';
import { VisualMediaModalContextProvider } from '@/contexts/VisualMediaModalContext';
import Navbar from '../components/Navbar';
import Sidebar from '../components/Sidebar';
import { CreatePostModalContextProvider } from '@/contexts/CreatePostModalContext';
import { cn } from '@/lib/cn';
import { useProtectApiRoute } from '@/hooks/useProtectApiRoute';
import BottomMenu from '@/components/BottomMenu';
import { CountContextProvider } from '@/contexts/CountContext';

const poppins = Poppins({
  weight: ['400', '500', '600', '700'],
  subsets: ['latin'],
});

export const metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const [user] = await useProtectApiRoute();
  return (
    <html lang="en">
      <head>
        <meta
          name="viewport"
          content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0"
        />
      </head>
      {/** USING .h-screen breaks the scrollRestoration of NextJS */}
      <body className={cn('bg-violet-100', poppins.className)}>
        <ToastContextProvider>
          <SessionProviderContext>
            <BasicDialogsContextProvider>
              <VisualMediaModalContextProvider>
                <CreatePostModalContextProvider>
                  <CountContextProvider>
                    {user ? (
                      <>
                        <div className="w-full fixed z-[1] top-0">
                          <Navbar />
                        </div>
                        <div className="fixed z-[1] top-0 left-0 pt-[80px] h-screen hidden md:block">
                          <Sidebar />
                        </div>
                        <div className="w-full fixed z-[1] bottom-0 block md:hidden">
                          <BottomMenu />
                        </div>
                        <div className="ml-0 md:ml-[220px] mt-[80px]">
                          {/**
                           *  Child pages/layouts must be wrapped within the <PageWrapper>
                           *  component to make the content scrollable when necessary.
                           *
                           *  Why not wrap them once and for all here? Because it will maintain
                           *  a single scroll amount across pages, resulting into unexpected behavior
                           *  e.g. navigating to another page is not scrolled to the top of the page
                           *  but instead maintains the scroll amount of the prev page.
                           */}
                          {children}
                        </div>
                      </>
                    ) : (
                      children
                    )}
                  </CountContextProvider>
                </CreatePostModalContextProvider>
              </VisualMediaModalContextProvider>
            </BasicDialogsContextProvider>
          </SessionProviderContext>
        </ToastContextProvider>
      </body>
    </html>
  );
}
